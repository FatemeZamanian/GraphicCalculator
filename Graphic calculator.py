
# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'untitled.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PySide6 import QtCore, QtGui, QtWidgets
from PySide6.QtWidgets import QApplication, QWidget
from PySide6.QtCore import QFile
from PySide6.QtUiTools import QUiLoader
import sys
import os
import math
from functools import partial
global operator
global text
global text2,text3,op2
operator=""
text=""
text2=""
op2=""
text3=""


class main(QWidget):

    def __init__(self):
        super(main, self).__init__()
        loader = QUiLoader()
        self.ui = loader.load('GraphicCalculator.ui', None)
        self.ui.show()
        self.ui.label.setText("")
        operator=""
        text=""
        text2=""
        text3=""
        op2=""
        self.ui.pushButton.clicked.connect(partial(self.method_num,"1"))
        self.ui.pushButton_2.clicked.connect(partial(self.method_num,"2"))
        self.ui.pushButton_3.clicked.connect(partial(self.method_num,"3"))
        self.ui.pushButton_4.clicked.connect(partial(self.method_num,"4"))
        self.ui.pushButton_5.clicked.connect(partial(self.method_num,"5"))
        self.ui.pushButton_6.clicked.connect(partial(self.method_num,"6"))
        self.ui.pushButton_7.clicked.connect(partial(self.method_num,"7"))
        self.ui.pushButton_8.clicked.connect(partial(self.method_num,"8"))
        self.ui.pushButton_9.clicked.connect(partial(self.method_num,"9"))
        self.ui.pushButton_zero.clicked.connect(partial(self.method_num,"0"))
        self.ui.pushButton_dot.clicked.connect(partial(self.method_num,"."))
        self.ui.pushButton_answer.clicked.connect(self.method_answer)
        self.ui.pushButton_pluse.clicked.connect(partial(self.method_op,"+"))
        self.ui.pushButton_minus.clicked.connect(partial(self.method_op,"-"))
        self.ui.pushButton_multiple.clicked.connect(partial(self.method_op,"*"))
        self.ui.pushButton_devide.clicked.connect(partial(self.method_op,"/"))
        self.ui.pushButton_power.clicked.connect(partial(self.method_op,"**"))
        self.ui.pushButton_sin.clicked.connect(self.method_sin)
        self.ui.pushButton_cos.clicked.connect(self.method_cos)
        self.ui.pushButton_tan.clicked.connect(self.method_tan)
        self.ui.pushButton_clear.clicked.connect(self.method_clear)
        self.ui.pushButton_del.clicked.connect(self.method_delete)

    def method_num(self,num):
        text=self.ui.label.text()
        self.ui.label.setText(text+num)

    def method_op(self,op):
        global operator
        global  text
        if operator !="":
            self.ui.method_answer()
        global  text
        text=self.ui.label.text()
        text=float(text)
        operator=op
        self.ui.label.setText("")


    def method_clear(self):
        self.ui.label.setText("")
        operator=""
        text=""
        text2=""
        text3=""
        op2=""
    def method_delete(self):
        text=self.ui.label.text()
        self.ui.label.setText(text[:len(text)-1])

   
    
    def method_sin(self):
        global operator
        if operator !="":
            global op2
            global  text
            global text3
            text3=text
            op2=operator
            self.ui.label.setText("")
            text=""
            operator=""
            self.ui.method_sin()

        else:
            self.ui.label.setText("")
            operator="sin"

    def method_cos(self):
        global operator
        if operator !="":
            global op2
            global  text
            global text3
            text3=text
            op2=operator
            self.ui.label.setText("")
            text=""
            operator=""
            self.ui.method_cos()

        else:
            self.ui.label.setText("")
            operator="cos"

    def method_tan(self):
        global operator
        if operator !="":
            global op2
            global  text
            global text3
            text3=text
            op2=operator
            self.ui.label.setText("")
            text=""
            operator=""
            self.ui.method_tan()

        else:
            self.ui.label.setText("")
            operator="tan"


    def method_answer(self):
        global text2,text3,text,operator,op2,c
        c=0
        if operator=="+":
            text2=self.ui.label.text()
            text2=float(text2)
            text=float(text)
            self.ui.label.setText("")
            ans=text+text2
            text=ans
            self.ui.label.setText(str(text))
            operator=""

        if operator=="-":
            text2=self.ui.label.text()
            text2=float(text2)
            self.ui.label.setText("")
            text=text-text2
            self.ui.label.setText(str(text))
            operator=""
        
        if operator=="*":
            text2=self.ui.label.text()
            text2=float(text2)
            self.ui.label.setText("")
            text=text*text2
            self.ui.label.setText(str(text))
            operator=""

        if operator=="/":
            text2=self.ui.label.text()
            text2=float(text2)
            self.ui.label.setText("")
            text=text/text2
            self.ui.label.setText(str(text))
            operator=""
        
        if operator=="**":
            text2=self.ui.label.text()
            text2=float(text2)
            self.ui.label.setText("")
            text=math.pow(text,text2) 
            self.ui.label.setText(str(text))
            operator=""

        if operator=="sin":

            if text=="":
                text2=self.ui.label.text()
                text2=float(text2)
                self.ui.label.setText("")
                text2=math.sin(math.radians(text2))
                self.ui.label.setText(str(text2))
                

        if operator=="cos":
                
            if text=="":
                text2=self.ui.label.text()
                text2=float(text2)
                self.ui.label.setText("")
                text2=math.cos(math.radians(text2))
                self.ui.label.setText(str(text2))

        if operator=="tan":
            if text=="":
                text2=self.ui.label.text()
                text2=float(text2)
                self.ui.label.setText("")
                text2=math.tan(math.radians(text2))
                self.ui.label.setText(str(text2))

        if text3 !="" and op2 !="":
            c=1
            operator=op2
            text=text3
            text3=""
            op2=""
            
        if c==1:
            c=0
            self.ui.method_answer()
            
        
            text=self.ui.label.text()
            text=float(text)
            operator=""


if __name__ == "__main__":
    app = QApplication([])
    widget = main()
    sys.exit(app.exec_())
